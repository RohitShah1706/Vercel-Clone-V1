generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  username String    @unique
  projects Project[]

  @@index([email])
}

model Project {
  id                String       @id @default(uuid())
  name              String
  buildCmd          String       @default("npm run build") @map("build_cmd")
  installCmd        String       @default("npm install") @map("install_cmd")
  outDir            String       @default("dist") @map("out_dir")
  rootDir           String       @default("") @map("root_dir")
  githubProjectName String       @map("github_project_name")
  userEmailId       String       @map("user_email_id")
  lastDeploymentId  String?      @unique @map("last_deployment_id")
  deployments       Deployment[] @relation("ProjectDeployments")
  envVars           EnvVar[]
  lastDeployment    Deployment?  @relation("LastDeployment", fields: [lastDeploymentId], references: [id])
  user              User         @relation(fields: [userEmailId], references: [email])
}

model Deployment {
  id                String           @id @default(uuid())
  projectId         String           @map("project_id")
  branch            String           @default("main")
  commitId          String           @map("commit_id")
  createdAt         DateTime         @default(now()) @map("created_at")
  status            DeploymentStatus @default(QUEUED)
  project           Project          @relation("ProjectDeployments", fields: [projectId], references: [id])
  logEvent          LogEvent[]
  associatedProject Project?         @relation("LastDeployment")
}

model EnvVar {
  id             String  @id @default(uuid())
  key            String
  encryptedValue String
  projectId      String  @map("project_id")
  project        Project @relation(fields: [projectId], references: [id])

  @@unique([key, projectId])
  @@index([projectId])
}

model LogEvent {
  id           String      @id @default(uuid())
  timestamp    DateTime    @default(now()) @db.Timestamp(6)
  deploymentId String?     @map("deployment_id")
  log          String
  Deployment   Deployment? @relation(fields: [deploymentId], references: [id])

  @@index([deploymentId])
}

enum DeploymentStatus {
  QUEUED
  DEPLOYING
  SUCCESS
  FAILED
}
