// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  projects Project[]

  @@index([email])
}

model Project {
  id                String       @id @default(uuid())
  name              String
  user              User         @relation(fields: [userEmailId], references: [email])
  userEmailId       String       @map("user_email_id")
  githubProjectName String       @map("github_project_name")
  rootDir           String       @default("") @map("root_dir")
  outDir            String       @default("dist") @map("out_dir")
  installCmd        String       @default("npm install") @map("install_cmd")
  buildCmd          String       @default("npm run build") @map("build_cmd")
  Deployment        Deployment[]

  // TODO: add envVars
}

model Deployment {
  id        String           @id @default(uuid())
  project   Project          @relation(fields: [projectId], references: [id])
  projectId String           @map("project_id")
  branch    String           @default("main")
  commitId  String           @default("HEAD") @map("commit_id")
  createdAt DateTime         @default(now()) @map("created_at")
  status    DeploymentStatus @default(QUEUED)

  // TODO: add lastBuildLogs
}

enum DeploymentStatus {
  QUEUED
  DEPLOYING
  SUCCESS
  FAILED
}
